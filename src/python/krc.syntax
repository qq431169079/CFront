

constant-expression:
    conditional-expression

expression:
    assignment-expression
    expression T_COMMA assignment-expression

assignment-expression:
    conditional-expression
    assignment-expression assignment-operator conditional-expression
    # This will cause a FIRST set conflict
    #unary-expression assignment-operator assignment-expression

assignment-operator:
    T_ASSIGN
    T_PLUS_ASSIGN
    T_MINUS_ASSIGN
    T_STAR_ASSIGN
    T_DIV_ASSIGN
    T_MOD_ASSIGN
    T_LSHIFT_ASSIGN
    T_RSHIFT_ASSIGN
    T_AMPERSAND_ASSIGN
    T_BITXOR_ASSIGN
    T_BITOR_ASSIGN
  
conditional-expression:
    logical-OR-expression
    logical-OR-expression T_QMARK expression T_COLON conditional-expression

logical-OR-expression:
    logical-AND-expression
    logical-OR-expression T_OR logical-AND-expression

logical-AND-expression:
    inclusive-OR-expression
    logical-AND-expression T_AND inclusive-OR-expression

inclusive-OR-expression:
    exclusive-OR-expression
    inclusive-OR-expression T_BIT_OR exclusive-OR-expression

exclusive-OR-expression:
    AND-expression
    exclusive-OR-expression T_BIT_XOR AND-expression

AND-expression:
    equality-expression
    AND-expression T_BIT_AND equality-expression

equality-expression:
    relational-expression
    equality-expression T_EQ relational-expression
    equality-expression T_NOTEQ relational-expression

relational-expression:
    shift-expression
    relational-expression T_LESS shift-expression
    relational-expression T_LESSEQ shift-expression
    relational-expression T_GREATER shift-expression
    relational-expression T_GREATEREQ shift-expression

shift-expression:
    additive-expression
    shift-expression T_LSHIFT additive-expression
    shift-expression T_RSHIFT additive-expression

additive-expression:
    multiplicative-expression
    additive-expression T_PLUS multiplicative-expression
    additive-expression T_MINUS multiplicative-expression

multiplicative-expression:
    cast-expression
    multiplicative-expression T_STAR cast-expression
    multiplicative-expression T_DIV cast-expression
    multiplicative-expression T_MOD cast-expression

cast-expression:
    unary-expression
    T_LESS type-name T_GREATER cast-expression

unary-operator:
    T_AMPERSAND
    T_STAR
    T_PLUS
    T_MINUS
    T_BITNOT
    T_NOT

unary-expression:
    postfix-expression
    T_INC unary-expression
    T_DEC unary-expression
    unary-operator cast-expression
    T_SIZEOF unary-expression
    T_SIZEOF T_LESS type-name T_GREATER

argument-expression-list:
    assignment-expression
    argument-expression-list T_COMMA assignment-expression

postfix-expression:
    primary-expression
    postfix-expression T_LSPAREN expression T_RSPAREN
    postfix-expression T_LPAREN T_RPAREN
    postfix-expression T_LPAREN argument-expression-list T_RPAREN
    postfix-expression T_DOT T_IDENT
    postfix-expression T_ARROW T_IDENT
    postfix-expression T_INC
    postfix-expression T_DEC

primary-expression:
    T_IDENT
    T_INT_CONST
    T_CHAR_CONST
    T_STRING_CONST
    T_LPAREN expression T_RPAREN

##################################
# The following is the type system
##################################

declaration:
    declaration-specifiers T_SEMICOLON
    declaration-specifiers init-declarator-list T_SEMICOLON

declaration-specifiers:
    storage-class-specifier
    type-specifier
    type-qualifier
    storage-class-specifier declaration-specifiers
    type-specifier          declaration-specifiers
    type-qualifier          declaration-specifiers

init-declarator-list:
    init-declarator
    init-declarator-list T_COMMA init-declarator

init-declarator:
    declarator
    declarator T_ASSIGN initializer

storage-class-specifier:
    T_TYPEDEF
    T_EXTERN
    T_STATIC
    T_AUTO
    T_REGISTER

type-specifier:
    T_VOID
    T_CHAR
    T_SHORT
    T_INT
    T_LONG
    T_FLOAT
    T_DOUBLE
    T_SIGNED
    T_UNSIGNED
    struct-or-union-specifier
    enum-specifier

struct-or-union-specifier:
    struct-or-union T_LCPAREN struct-declaration-list T_RCPAREN
    struct-or-union T_IDENT T_LCPAREN struct-declaration-list T_RCPAREN
    struct-or-union T_IDENT

struct-or-union:
    T_STRUCT
    T_UNION

struct-declaration-list:
    struct-declaration
    struct-declaration-list struct-declaration

struct-declaration:
    specifier-qualifier-list struct-declarator-list T_SEMICOLON

specifier-qualifier-list:
    type-specifier
    type-qualifier
    type-specifier specifier-qualifier-list
    type-qualifier specifier-qualifier-list

struct-declarator-list:
    struct-declarator
    struct-declarator-list T_COMMA struct-declarator

struct-declarator:
    declarator
    T_COLON constant-expression
    declarator T_COLON constant-expression

enum-specifier:
    enum T_LCPAREN enumerator-list T_RCPAREN
    enum T_IDENT T_LCPAREN enumerator-list T_RCPAREN
    enum T_IDENT

enumerator-list:
    enumerator
    enumerator-list T_COMMA enumerator

enumerator:
    enumeration-constant
    enumeration-constant A_ASSIGN constant-expression

enumeration-constant:
    T_IDENT

type-qualifier:
    T_CONST
    T_VOLATILE

declarator:
    direct-declarator
    pointer direct-declarator

direct-declarator:
    T_IDENT
    T_LPAREN declarator T_RPAREN
    direct-declarator T_LSPAREN T_RSPAREN
    direct-declarator T_LSPAREN constant-expression T_RSPAREN
    direct-declarator T_LPAREN T_RPAREN
    direct-declarator T_LPAREN parameter-type-list T_RPAREN
    direct-declarator T_LPAREN identifier-list T_RPAREN

pointer:
     T_STAR
     T_STAR pointer
     T_STAR type-qualifier-list
     T_STAR type-qualifier-list pointer

type-qualifier-list:
    type-qualifier
    type-qualifier-list type-qualifier

parameter-type-list:
    parameter-list
    #TODO: DO NOT SUPPORT VARARG
    #parameter-list , ...

parameter-list:
    parameter-declaration
    parameter-list T_COMMA parameter-declaration

parameter-declaration:
    # We do not allow abstract type here, otherwise it conflicts
    # with the declarator
    declaration-specifiers declarator
    declaration-specifiers
    # Do not allow abstract type
    #declaration-specifiers abstract-declarator

identifier-list:
    T_IDENT
    identifier-list T_COMMA T_IDENT

# This is used in cast expression or sizeof operator
# Since we use < and > pair to denote abstract type in those
# two cases, the abstract declarator could be used
# In function declarations we could not rely on abstract declarator
type-name:
    specifier-qualifier-list
    # We could use abstract declarator in type name for type casting
    # because it is easier for us to specify an abstract type
    # without giving a name
    specifier-qualifier-list abstract-declarator

abstract-declarator:
    pointer
    direct-abstract-declarator
    pointer direct-abstract-declarator

direct-abstract-declarator:
    T_LPAREN abstract-declarator T_RPAREN
    T_LSPAREN T_RSPAREN
    T_LSPAREN constant-expression T_RSPAREN
    T_LPAREN T_RPAREN
    T_LPAREN parameter-type-list T_RPAREN
    direct-abstract-declarator T_LSPAREN T_RSPAREN
    direct-abstract-declarator T_LSPAREN constant-expression T_RSPAREN
    direct-abstract-declarator T_LPAREN T_RPAREN
    direct-abstract-declarator T_LPAREN parameter-type-list T_RPAREN

initializer:
    assignment-expression
    T_LCPAREN initializer-list T_RCPAREN
    # Do not allow extra comma
    #T_LCPAREN initializer-list T_COMMA T_RCPAREN

initializer-list:
    initializer
    initializer-list T_COMMA initializer
